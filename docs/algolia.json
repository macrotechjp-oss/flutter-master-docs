[{"content":"Flutter Master The Techdoc is a Hugo Theme for technical documentation. Features  Modern, Simple layout Responsive web design Documentation menu (Select Menu style) Table Of Contents for the page (selective) Theme color Edit link to documentation repository Custom Shortcodes  Code highlight with clipboard Alert panel Button   Search Shortcode powered by Algolia Open Graph Analytics with Google Analytics, Google Tag Manager  ","date":1508426775,"description":"Text about this post","lastmod":"2019-10-26T15:26:15Z","objectID":"3976528693a0108357f4928017600865","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/","publishdate":"2018-11-23T15:26:15Z","title":"Home title"},{"content":"Hugo is a static site engine written in Go.\nIt makes use of a variety of open source projects including:\n Cobra Viper J Walter Weatherman Cast  Learn more and contribute on GitHub.\n","date":1397001600,"description":"","lastmod":"2014-04-09T00:00:00Z","objectID":"6083a88ee3411b0d17ce02d738f69d47","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/about/","publishdate":"2014-04-09T00:00:00Z","title":"About Hugo"},{"content":"aaaaaa\nvvvv\naaa\n","date":1508248845,"description":"","lastmod":"2017-10-17T14:00:45Z","objectID":"29f9eeda1628d185706c1b67c78c501d","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/archives/hello_world/","publishdate":"2017-10-17T14:00:45Z","title":"Hello_world"},{"content":"aaaaaa\nvvvv\naaa\n","date":1510927245,"description":"","lastmod":"2017-11-17T14:00:45Z","objectID":"5869c73a22394f8efb64bd831f9bc83f","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/archives/hello_world1/","publishdate":"2017-11-17T14:00:45Z","title":"Hello_world1"},{"content":"aaaaaa\nvvvv\naaa\n","date":1513519245,"description":"","lastmod":"2017-12-17T14:00:45Z","objectID":"9315537b53139ed086cd4a65014c2257","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/archives/hello_world2/","publishdate":"2017-12-17T14:00:45Z","title":"Hello_world2"},{"content":"aaaaaa\nvvvv\naaa\n","date":1508248845,"description":"","lastmod":"2017-10-17T14:00:45Z","objectID":"93670bf9cab42e0169e3ce382c755e59","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/blog/hello_world/","publishdate":"2017-10-17T14:00:45Z","title":"Hello_world"},{"content":"aaaaaa\nvvvv\naaa\n","date":1510927245,"description":"","lastmod":"2017-11-17T14:00:45Z","objectID":"31c23d923d63baa3965e3789ebf4b1a3","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/blog/hello_world1/","publishdate":"2017-11-17T14:00:45Z","title":"Hello_world1"},{"content":"aaaaaa\nvvvv\naaa\n","date":1513519245,"description":"","lastmod":"2017-12-17T14:00:45Z","objectID":"fa1a6d2f3f583c420f9fbca139058eb5","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/blog/hello_world2/","publishdate":"2017-12-17T14:00:45Z","title":"Hello_world2"},{"content":"aaaaaa\nvvvv\naaa\n","date":1508248845,"description":"","lastmod":"2017-10-17T14:00:45Z","objectID":"9a98ee2c3742d5ec977b28f6df756dec","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/entry/hello_world/","publishdate":"2017-10-17T14:00:45Z","title":"Hello_world"},{"content":"aaaaaa\nvvvv\naaa\n","date":1510927245,"description":"","lastmod":"2017-11-17T14:00:45Z","objectID":"a8ae0d1b823f41f12d7995f10a5c2dde","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/entry/hello_world1/","publishdate":"2017-11-17T14:00:45Z","title":"Hello_world1"},{"content":"aaaaaa\nvvvv\naaa\n","date":1513519245,"description":"","lastmod":"2017-12-17T14:00:45Z","objectID":"8628bf7bda73a7617888d17ad2064262","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/entry/hello_world2/","publishdate":"2017-12-17T14:00:45Z","title":"Hello_world2"},{"content":"Installation Download Hugo theme, configure, preview site \u0026amp;hellip;\nConfiguration You may specify options in config.toml (or config.yaml/config.json) of your site to make use of this theme\u0026amp;rsquo;s features.\nScreenshot ","date":1508253975,"description":"Text about this post","lastmod":"2018-12-08T15:26:15Z","objectID":"dfae1d937010a359c06f3a1a5f0b3f0a","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/getting-started/","publishdate":"2018-11-23T15:26:15Z","title":"Getting Started"},{"content":"You may specify options in config.toml (or config.yaml/config.json) of your site to make use of this theme’s features.\nFor an example of config.toml, see config.toml in exampleSite.\nParams # Source Code repository section description = \u0026amp;quot;put your description\u0026amp;quot; github_repository = \u0026amp;quot;https://github.com/thingsym/hugo-theme-techdoc\u0026amp;quot; version = \u0026amp;quot;0.9.6\u0026amp;quot; # Documentation repository section # documentation repository (set edit link to documentation repository) github_doc_repository = \u0026amp;quot;https://github.com/thingsym/hugo-theme-techdoc\u0026amp;quot; # Analytic section google_analytics_id = \u0026amp;quot;\u0026amp;quot; # Your Google Analytics tracking id tag_manager_container_id = \u0026amp;quot;\u0026amp;quot; # Your Google Tag Manager container id google_site_verification = \u0026amp;quot;\u0026amp;quot; # Your Google Site Verification for Search Console # Open Graph and Twitter Cards settings section # Open Graph settings for each page are set on the front matter. # See https://gohugo.io/templates/internal/#open-graph # See https://gohugo.io/templates/internal/#twitter-cards title = \u0026amp;quot;Hugo Techdoc Theme\u0026amp;quot; images = [\u0026amp;quot;images/og-image.png\u0026amp;quot;] # Open graph images are placed in `static/images` # Theme settings section # Theme color # See color value reference https://developer.mozilla.org/en-US/docs/Web/CSS/color custom_font_color = \u0026amp;quot;\u0026amp;quot; custom_background_color = \u0026amp;quot;\u0026amp;quot; # Documentation Menu section # Menu style settings menu_style = \u0026amp;quot;open-menu\u0026amp;quot; # \u0026amp;quot;open-menu\u0026amp;quot; or \u0026amp;quot;slide-menu\u0026amp;quot; or \u0026amp;quot;\u0026amp;quot; blank is as no sidebar # Date format dateformat = \u0026amp;quot;\u0026amp;quot; # default \u0026amp;quot;2 Jan 2006\u0026amp;quot; # See the format reference https://gohugo.io/functions/format/#hugo-date-and-time-templating-reference # path name excluded from documentation menu menu_exclusion = [ \u0026amp;quot;archives\u0026amp;quot;, \u0026amp;quot;archive\u0026amp;quot;, \u0026amp;quot;blog\u0026amp;quot;, \u0026amp;quot;entry\u0026amp;quot;, \u0026amp;quot;post\u0026amp;quot;, \u0026amp;quot;posts\u0026amp;quot;, ] # Algolia site search section # See https://www.algolia.com/doc/ algolia_search_enable = …","date":1508253975,"description":"","lastmod":"2019-10-26T15:26:15Z","objectID":"a5dec696cdd3d4800ae536a04a91e839","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/getting-started/configuration/","publishdate":"2017-10-17T15:26:15Z","title":"Configuration"},{"content":"Install Hugo theme on your project If you have git installed, you can include hugo-theme-techdoc repository into your core repository as submodule using git submodule within your project directory.\ncd your_project git submodule add https://github.com/thingsym/hugo-theme-techdoc.git themes/hugo-theme-techdoc For more information read the Hugo documentation.\nOr download Hugo theme on your project If you have git installed, you can do the following at the command-line-interface within your project directory.\ncd your_project/themes git clone https://github.com/thingsym/hugo-theme-techdoc.git Configure You may specify options in config.toml (or config.yaml/config.json) of your site to make use of this theme\u0026amp;rsquo;s features.\nFor an example of config.toml, see config.toml in exampleSite.\nSee the Configuration documentation.\nPreview site To preview your site, run Hugo\u0026amp;rsquo;s built-in local server.\nhugo server -t hugo-theme-techdoc Browse site on http://localhost:1313\n","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"d074c1ad145e37cf934872d8168af045","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/getting-started/installation/","publishdate":"2017-10-17T15:26:15Z","title":"Installation"},{"content":"Theme color Menu style Open Menu Slide Menu Edit link ","date":1572103575,"description":"","lastmod":"2019-10-26T15:26:15Z","objectID":"11aec25427d3cf5cd42c0c04611aa4ad","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/getting-started/screenshot/","publishdate":"2019-10-26T15:26:15Z","title":"Screenshot"},{"content":"Hello world!\n","date":1508248845,"description":"","lastmod":"2017-10-17T14:00:45Z","objectID":"a37038ea9c0a627175646a70bd3fc060","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/hello_world/","publishdate":"2017-10-17T14:00:45Z","title":"Hello world!"},{"content":"Installation Download Hugo theme, configure, preview site \u0026amp;hellip;\nConfiguration You may specify options in config.toml (or config.yaml/config.json) of your site to make use of this theme\u0026amp;rsquo;s features.\nScreenshot ","date":1508253975,"description":"Text about this post","lastmod":"2018-12-08T15:26:15Z","objectID":"4739abc079724d6299a988bc2015178f","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/overviews/","publishdate":"2018-11-23T15:26:15Z","title":"Overviews"},{"content":"Frontend/Backend          Infrastructure     Support Tools     ","date":1508253975,"description":"","lastmod":"2019-10-26T15:26:15Z","objectID":"d0e5dda5e7819f626bcd36befd440623","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/overviews/architectures/","publishdate":"2017-10-17T15:26:15Z","title":"Architectures"},{"content":"You may specify options in config.toml (or config.yaml/config.json) of your site to make use of this theme’s features.\nFor an example of config.toml, see config.toml in exampleSite.\nParams # Source Code repository section description = \u0026amp;quot;put your description\u0026amp;quot; github_repository = \u0026amp;quot;https://github.com/thingsym/hugo-theme-techdoc\u0026amp;quot; version = \u0026amp;quot;0.9.6\u0026amp;quot; # Documentation repository section # documentation repository (set edit link to documentation repository) github_doc_repository = \u0026amp;quot;https://github.com/thingsym/hugo-theme-techdoc\u0026amp;quot; # Analytic section google_analytics_id = \u0026amp;quot;\u0026amp;quot; # Your Google Analytics tracking id tag_manager_container_id = \u0026amp;quot;\u0026amp;quot; # Your Google Tag Manager container id google_site_verification = \u0026amp;quot;\u0026amp;quot; # Your Google Site Verification for Search Console # Open Graph and Twitter Cards settings section # Open Graph settings for each page are set on the front matter. # See https://gohugo.io/templates/internal/#open-graph # See https://gohugo.io/templates/internal/#twitter-cards title = \u0026amp;quot;Hugo Techdoc Theme\u0026amp;quot; images = [\u0026amp;quot;images/og-image.png\u0026amp;quot;] # Open graph images are placed in `static/images` # Theme settings section # Theme color # See color value reference https://developer.mozilla.org/en-US/docs/Web/CSS/color custom_font_color = \u0026amp;quot;\u0026amp;quot; custom_background_color = \u0026amp;quot;\u0026amp;quot; # Documentation Menu section # Menu style settings menu_style = \u0026amp;quot;open-menu\u0026amp;quot; # \u0026amp;quot;open-menu\u0026amp;quot; or \u0026amp;quot;slide-menu\u0026amp;quot; or \u0026amp;quot;\u0026amp;quot; blank is as no sidebar # Date format dateformat = \u0026amp;quot;\u0026amp;quot; # default \u0026amp;quot;2 Jan 2006\u0026amp;quot; # See the format reference https://gohugo.io/functions/format/#hugo-date-and-time-templating-reference # path name excluded from documentation menu menu_exclusion = [ \u0026amp;quot;archives\u0026amp;quot;, \u0026amp;quot;archive\u0026amp;quot;, \u0026amp;quot;blog\u0026amp;quot;, \u0026amp;quot;entry\u0026amp;quot;, \u0026amp;quot;post\u0026amp;quot;, \u0026amp;quot;posts\u0026amp;quot;, ] # Algolia site search section # See https://www.algolia.com/doc/ algolia_search_enable = …","date":1508253975,"description":"","lastmod":"2019-10-26T15:26:15Z","objectID":"c793f6217dd9bc92e1b07b2c03da5e50","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/overviews/deploy/","publishdate":"2017-10-17T15:26:15Z","title":"Deploy"},{"content":"Function List    FunctionName OpenSource Customize     User     Social Login（Google、Facebook） × ✓   Content     Contents View ✓ ✓   Data Analysis     User Content ✓ ✓   Inquiry     Post Form ✓ ✓   RealTime Chat ✓ ✓   Settings     Overall Information ✓ ✓   Individual Information ✓ ✓   Custom Information × ✓    Function Details Social Login（Google、Facebook） ","date":1508253975,"description":"","lastmod":"2019-10-26T15:26:15Z","objectID":"cd791f2538e00b716ffda71f52a23044","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/overviews/functions/","publishdate":"2017-10-17T15:26:15Z","title":"Functions"},{"content":"You may specify options in config.toml (or config.yaml/config.json) of your site to make use of this theme’s features.\nFor an example of config.toml, see config.toml in exampleSite.\nParams # Source Code repository section description = \u0026amp;quot;put your description\u0026amp;quot; github_repository = \u0026amp;quot;https://github.com/thingsym/hugo-theme-techdoc\u0026amp;quot; version = \u0026amp;quot;0.9.6\u0026amp;quot; # Documentation repository section # documentation repository (set edit link to documentation repository) github_doc_repository = \u0026amp;quot;https://github.com/thingsym/hugo-theme-techdoc\u0026amp;quot; # Analytic section google_analytics_id = \u0026amp;quot;\u0026amp;quot; # Your Google Analytics tracking id tag_manager_container_id = \u0026amp;quot;\u0026amp;quot; # Your Google Tag Manager container id google_site_verification = \u0026amp;quot;\u0026amp;quot; # Your Google Site Verification for Search Console # Open Graph and Twitter Cards settings section # Open Graph settings for each page are set on the front matter. # See https://gohugo.io/templates/internal/#open-graph # See https://gohugo.io/templates/internal/#twitter-cards title = \u0026amp;quot;Hugo Techdoc Theme\u0026amp;quot; images = [\u0026amp;quot;images/og-image.png\u0026amp;quot;] # Open graph images are placed in `static/images` # Theme settings section # Theme color # See color value reference https://developer.mozilla.org/en-US/docs/Web/CSS/color custom_font_color = \u0026amp;quot;\u0026amp;quot; custom_background_color = \u0026amp;quot;\u0026amp;quot; # Documentation Menu section # Menu style settings menu_style = \u0026amp;quot;open-menu\u0026amp;quot; # \u0026amp;quot;open-menu\u0026amp;quot; or \u0026amp;quot;slide-menu\u0026amp;quot; or \u0026amp;quot;\u0026amp;quot; blank is as no sidebar # Date format dateformat = \u0026amp;quot;\u0026amp;quot; # default \u0026amp;quot;2 Jan 2006\u0026amp;quot; # See the format reference https://gohugo.io/functions/format/#hugo-date-and-time-templating-reference # path name excluded from documentation menu menu_exclusion = [ \u0026amp;quot;archives\u0026amp;quot;, \u0026amp;quot;archive\u0026amp;quot;, \u0026amp;quot;blog\u0026amp;quot;, \u0026amp;quot;entry\u0026amp;quot;, \u0026amp;quot;post\u0026amp;quot;, \u0026amp;quot;posts\u0026amp;quot;, ] # Algolia site search section # See https://www.algolia.com/doc/ algolia_search_enable = …","date":1508253975,"description":"","lastmod":"2019-10-26T15:26:15Z","objectID":"a4d014499eee1f0817321191ed1b1903","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/overviews/operation/","publishdate":"2017-10-17T15:26:15Z","title":"Operation"},{"content":"Software Version    name varsion     npm Lorem   Vue CLI ipsum   dolor dolor   sit sit   amet amet    Directory Configration  Github Repository ├── build .. hugo new コマンドでコンテンツファイルを作ったときの Markdown のフォーマット │ │── pages .. デフォルトで設定したい書式を記載 │ │ └── pages ├── config .. メインコンテンツとなるMarkdownファイルを置くディレクトリ ├── node_modules .. サイトの全ページから参照したいデータを記述したファイルを置くディレクトリ ├── src .. 本番公開用のHTMLが作成されるディレクトリ ├── static .. 静的ファイル（スタイルシート、JavaScript や画像ファイルなど）を配置するディレクトリ ├── .babelrc .. 利用するhugoテーマファイルを配置するディレクトリ ├── .editorconfig .. Hugoの設定ファイル ├── .gitignore .. MIT License ├── .gitignore .. MIT License ├── package.json .. MIT License └── README.md .. リポジトリの概要情報を記載 ","date":1508253975,"description":"","lastmod":"2019-10-26T15:26:15Z","objectID":"499d81aab8d2c893be920cd700a1243e","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/overviews/programming/","publishdate":"2017-10-17T15:26:15Z","title":"Programming"},{"content":"You may specify options in config.toml (or config.yaml/config.json) of your site to make use of this theme’s features.\nFor an example of config.toml, see config.toml in exampleSite.\nParams # Source Code repository section description = \u0026amp;quot;put your description\u0026amp;quot; github_repository = \u0026amp;quot;https://github.com/thingsym/hugo-theme-techdoc\u0026amp;quot; version = \u0026amp;quot;0.9.6\u0026amp;quot; # Documentation repository section # documentation repository (set edit link to documentation repository) github_doc_repository = \u0026amp;quot;https://github.com/thingsym/hugo-theme-techdoc\u0026amp;quot; # Analytic section google_analytics_id = \u0026amp;quot;\u0026amp;quot; # Your Google Analytics tracking id tag_manager_container_id = \u0026amp;quot;\u0026amp;quot; # Your Google Tag Manager container id google_site_verification = \u0026amp;quot;\u0026amp;quot; # Your Google Site Verification for Search Console # Open Graph and Twitter Cards settings section # Open Graph settings for each page are set on the front matter. # See https://gohugo.io/templates/internal/#open-graph # See https://gohugo.io/templates/internal/#twitter-cards title = \u0026amp;quot;Hugo Techdoc Theme\u0026amp;quot; images = [\u0026amp;quot;images/og-image.png\u0026amp;quot;] # Open graph images are placed in `static/images` # Theme settings section # Theme color # See color value reference https://developer.mozilla.org/en-US/docs/Web/CSS/color custom_font_color = \u0026amp;quot;\u0026amp;quot; custom_background_color = \u0026amp;quot;\u0026amp;quot; # Documentation Menu section # Menu style settings menu_style = \u0026amp;quot;open-menu\u0026amp;quot; # \u0026amp;quot;open-menu\u0026amp;quot; or \u0026amp;quot;slide-menu\u0026amp;quot; or \u0026amp;quot;\u0026amp;quot; blank is as no sidebar # Date format dateformat = \u0026amp;quot;\u0026amp;quot; # default \u0026amp;quot;2 Jan 2006\u0026amp;quot; # See the format reference https://gohugo.io/functions/format/#hugo-date-and-time-templating-reference # path name excluded from documentation menu menu_exclusion = [ \u0026amp;quot;archives\u0026amp;quot;, \u0026amp;quot;archive\u0026amp;quot;, \u0026amp;quot;blog\u0026amp;quot;, \u0026amp;quot;entry\u0026amp;quot;, \u0026amp;quot;post\u0026amp;quot;, \u0026amp;quot;posts\u0026amp;quot;, ] # Algolia site search section # See https://www.algolia.com/doc/ algolia_search_enable = …","date":1508253975,"description":"","lastmod":"2019-10-26T15:26:15Z","objectID":"f4ac9d33e4ee299e265ad6eb025e17ce","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/overviews/test/","publishdate":"2017-10-17T15:26:15Z","title":"Test"},{"categories":["Development","golang"],"content":"Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.\nSave it somewhere specific as we will be using it in the next step.\nMore complete instructions are available at Install Hugo\nStep 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.\nFollow the following steps:\n Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:\ngit clone https://github.com/spf13/hugo cd hugo /path/to/where/you/installed/hugo server --source=./docs \u0026amp;gt; 29 pages created \u0026amp;gt; 0 tags index created \u0026amp;gt; in 27 ms \u0026amp;gt; Web Server is available at http://localhost:1313 \u0026amp;gt; Press ctrl+c to stop  Once you\u0026amp;rsquo;ve gotten here, follow along the rest of this page on your local build.\nStep 3. Change the docs site Stop the Hugo process by hitting Ctrl+C.\nNow we are going to run hugo again, but this time with hugo in watch mode.\n/path/to/hugo/from/step/1/hugo server --source=./docs --watch \u0026amp;gt; 29 pages created \u0026amp;gt; 0 tags index created \u0026amp;gt; in 27 ms \u0026amp;gt; Web Server is available at http://localhost:1313 \u0026amp;gt; Watching for changes in /Users/spf13/Code/hugo/docs/content \u0026amp;gt; Press ctrl+c to stop  Open your favorite editor and change one of the source content pages. How about changing this very file to fix the typo. How about changing this very file to fix the typo.\nContent files are found in docs/content/. Unless otherwise specified, files are located at the same relative location as the url, in our case docs/content/overview/quickstart.md.\nChange and save this file.. Notice what happened in your terminal.\n\u0026amp;gt; Change detected, rebuilding site \u0026amp;gt; 29 pages created \u0026amp;gt; 0 tags index created \u0026amp;gt; in 26 ms  Refresh the browser and observe that the typo is now fixed.\nNotice how quick that was. Try to refresh the site before it\u0026amp;rsquo;s finished building. I double dare you. Having nearly …","date":1396396800,"description":"","lastmod":"2014-04-02T00:00:00Z","objectID":"5fb979c957d7b6bd3e3498f436f9142e","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/post/develop-flutter-master/","publishdate":"2014-04-02T00:00:00Z","tags":["go","golang","hugo","development"],"title":"Develop on Flutter Master"},{"content":"Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026amp;rsquo;t cover using CSS to style your theme.\nWe\u0026amp;rsquo;ll start with creating a new site with a very basic template. Then we\u0026amp;rsquo;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.\nIn this tutorial, commands that you enter will start with the \u0026amp;ldquo;$\u0026amp;rdquo; prompt. The output will follow. Lines that start with \u0026amp;ldquo;#\u0026amp;rdquo; are comments that I\u0026amp;rsquo;ve added to explain a point. When I show updates to a file, the \u0026amp;ldquo;:wq\u0026amp;rdquo; on the last line means to save the file.\nHere\u0026amp;rsquo;s an example:\n## this is a comment $ echo this is a command this is a command ## edit the file $ vi foo.md +++ date = \u0026amp;quot;2014-09-28\u0026amp;quot; title = \u0026amp;quot;creating a new theme\u0026amp;quot; +++ bah and humbug :wq ## show it $ cat foo.md +++ date = \u0026amp;quot;2014-09-28\u0026amp;quot; title = \u0026amp;quot;creating a new theme\u0026amp;quot; +++ bah and humbug $ Some Definitions There are a few concepts that you need to understand before creating a theme.\nSkins Skins are the files responsible for the look and feel of your site. It’s the CSS that controls colors and fonts, it’s the Javascript that determines actions and reactions. It’s also the rules that Hugo uses to transform your content into the HTML that the site will serve to visitors.\nYou have two ways to create a skin. The simplest way is to create it in the layouts/ directory. If you do, then you don’t have to worry about configuring Hugo to recognize it. The first place that Hugo will look for rules and files is in the layouts/ directory so it will always find the skin.\nYour second choice is to create it in a sub-directory of the themes/ directory. If you do, then you must always tell …","date":1411862400,"description":"","lastmod":"2014-09-28T00:00:00Z","objectID":"6dd5dc6c82566e3c4dd381f3b4348f20","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/post/develop-overview-architecture/","publishdate":"2014-09-28T00:00:00Z","title":"Creating a New Theme"},{"content":"Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026amp;rsquo;t cover using CSS to style your theme.\nWe\u0026amp;rsquo;ll start with creating a new site with a very basic template. Then we\u0026amp;rsquo;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.\nIn this tutorial, commands that you enter will start with the \u0026amp;ldquo;$\u0026amp;rdquo; prompt. The output will follow. Lines that start with \u0026amp;ldquo;#\u0026amp;rdquo; are comments that I\u0026amp;rsquo;ve added to explain a point. When I show updates to a file, the \u0026amp;ldquo;:wq\u0026amp;rdquo; on the last line means to save the file.\nHere\u0026amp;rsquo;s an example:\n## this is a comment $ echo this is a command this is a command ## edit the file $ vi foo.md +++ date = \u0026amp;quot;2014-09-28\u0026amp;quot; title = \u0026amp;quot;creating a new theme\u0026amp;quot; +++ bah and humbug :wq ## show it $ cat foo.md +++ date = \u0026amp;quot;2014-09-28\u0026amp;quot; title = \u0026amp;quot;creating a new theme\u0026amp;quot; +++ bah and humbug $ Some Definitions There are a few concepts that you need to understand before creating a theme.\nSkins Skins are the files responsible for the look and feel of your site. It’s the CSS that controls colors and fonts, it’s the Javascript that determines actions and reactions. It’s also the rules that Hugo uses to transform your content into the HTML that the site will serve to visitors.\nYou have two ways to create a skin. The simplest way is to create it in the layouts/ directory. If you do, then you don’t have to worry about configuring Hugo to recognize it. The first place that Hugo will look for rules and files is in the layouts/ directory so it will always find the skin.\nYour second choice is to create it in a sub-directory of the themes/ directory. If you do, then you must always tell …","date":1411862400,"description":"","lastmod":"2014-09-28T00:00:00Z","objectID":"116fd283a92a80a1e894a22a690db351","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/post/develop-overview-deploy/","publishdate":"2014-09-28T00:00:00Z","title":"Creating a New Theme"},{"content":"Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026amp;rsquo;t cover using CSS to style your theme.\nWe\u0026amp;rsquo;ll start with creating a new site with a very basic template. Then we\u0026amp;rsquo;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.\nIn this tutorial, commands that you enter will start with the \u0026amp;ldquo;$\u0026amp;rdquo; prompt. The output will follow. Lines that start with \u0026amp;ldquo;#\u0026amp;rdquo; are comments that I\u0026amp;rsquo;ve added to explain a point. When I show updates to a file, the \u0026amp;ldquo;:wq\u0026amp;rdquo; on the last line means to save the file.\nHere\u0026amp;rsquo;s an example:\n## this is a comment $ echo this is a command this is a command ## edit the file $ vi foo.md +++ date = \u0026amp;quot;2014-09-28\u0026amp;quot; title = \u0026amp;quot;creating a new theme\u0026amp;quot; +++ bah and humbug :wq ## show it $ cat foo.md +++ date = \u0026amp;quot;2014-09-28\u0026amp;quot; title = \u0026amp;quot;creating a new theme\u0026amp;quot; +++ bah and humbug $ Some Definitions There are a few concepts that you need to understand before creating a theme.\nSkins Skins are the files responsible for the look and feel of your site. It’s the CSS that controls colors and fonts, it’s the Javascript that determines actions and reactions. It’s also the rules that Hugo uses to transform your content into the HTML that the site will serve to visitors.\nYou have two ways to create a skin. The simplest way is to create it in the layouts/ directory. If you do, then you don’t have to worry about configuring Hugo to recognize it. The first place that Hugo will look for rules and files is in the layouts/ directory so it will always find the skin.\nYour second choice is to create it in a sub-directory of the themes/ directory. If you do, then you must always tell …","date":1411862400,"description":"","lastmod":"2014-09-28T00:00:00Z","objectID":"208e4564fd390b9e9e9382b81cee355e","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/post/develop-overview-function/","publishdate":"2014-09-28T00:00:00Z","title":"Creating a New Theme"},{"content":"Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026amp;rsquo;t cover using CSS to style your theme.\nWe\u0026amp;rsquo;ll start with creating a new site with a very basic template. Then we\u0026amp;rsquo;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.\nIn this tutorial, commands that you enter will start with the \u0026amp;ldquo;$\u0026amp;rdquo; prompt. The output will follow. Lines that start with \u0026amp;ldquo;#\u0026amp;rdquo; are comments that I\u0026amp;rsquo;ve added to explain a point. When I show updates to a file, the \u0026amp;ldquo;:wq\u0026amp;rdquo; on the last line means to save the file.\nHere\u0026amp;rsquo;s an example:\n## this is a comment $ echo this is a command this is a command ## edit the file $ vi foo.md +++ date = \u0026amp;quot;2014-09-28\u0026amp;quot; title = \u0026amp;quot;creating a new theme\u0026amp;quot; +++ bah and humbug :wq ## show it $ cat foo.md +++ date = \u0026amp;quot;2014-09-28\u0026amp;quot; title = \u0026amp;quot;creating a new theme\u0026amp;quot; +++ bah and humbug $ Some Definitions There are a few concepts that you need to understand before creating a theme.\nSkins Skins are the files responsible for the look and feel of your site. It’s the CSS that controls colors and fonts, it’s the Javascript that determines actions and reactions. It’s also the rules that Hugo uses to transform your content into the HTML that the site will serve to visitors.\nYou have two ways to create a skin. The simplest way is to create it in the layouts/ directory. If you do, then you don’t have to worry about configuring Hugo to recognize it. The first place that Hugo will look for rules and files is in the layouts/ directory so it will always find the skin.\nYour second choice is to create it in a sub-directory of the themes/ directory. If you do, then you must always tell …","date":1411862400,"description":"","lastmod":"2014-09-28T00:00:00Z","objectID":"d5494485cd0e4d032a1b12666436cb56","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/post/develop-overview-operation/","publishdate":"2014-09-28T00:00:00Z","title":"Creating a New Theme"},{"content":"Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026amp;rsquo;t cover using CSS to style your theme.\nWe\u0026amp;rsquo;ll start with creating a new site with a very basic template. Then we\u0026amp;rsquo;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.\nIn this tutorial, commands that you enter will start with the \u0026amp;ldquo;$\u0026amp;rdquo; prompt. The output will follow. Lines that start with \u0026amp;ldquo;#\u0026amp;rdquo; are comments that I\u0026amp;rsquo;ve added to explain a point. When I show updates to a file, the \u0026amp;ldquo;:wq\u0026amp;rdquo; on the last line means to save the file.\nHere\u0026amp;rsquo;s an example:\n## this is a comment $ echo this is a command this is a command ## edit the file $ vi foo.md +++ date = \u0026amp;quot;2014-09-28\u0026amp;quot; title = \u0026amp;quot;creating a new theme\u0026amp;quot; +++ bah and humbug :wq ## show it $ cat foo.md +++ date = \u0026amp;quot;2014-09-28\u0026amp;quot; title = \u0026amp;quot;creating a new theme\u0026amp;quot; +++ bah and humbug $ Some Definitions There are a few concepts that you need to understand before creating a theme.\nSkins Skins are the files responsible for the look and feel of your site. It’s the CSS that controls colors and fonts, it’s the Javascript that determines actions and reactions. It’s also the rules that Hugo uses to transform your content into the HTML that the site will serve to visitors.\nYou have two ways to create a skin. The simplest way is to create it in the layouts/ directory. If you do, then you don’t have to worry about configuring Hugo to recognize it. The first place that Hugo will look for rules and files is in the layouts/ directory so it will always find the skin.\nYour second choice is to create it in a sub-directory of the themes/ directory. If you do, then you must always tell …","date":1411862400,"description":"","lastmod":"2014-09-28T00:00:00Z","objectID":"ed7d65de308fe312618e228ba4a4dc1d","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/post/develop-overview-programming/","publishdate":"2014-09-28T00:00:00Z","title":"Creating a New Theme"},{"content":"Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026amp;rsquo;t cover using CSS to style your theme.\nWe\u0026amp;rsquo;ll start with creating a new site with a very basic template. Then we\u0026amp;rsquo;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.\nIn this tutorial, commands that you enter will start with the \u0026amp;ldquo;$\u0026amp;rdquo; prompt. The output will follow. Lines that start with \u0026amp;ldquo;#\u0026amp;rdquo; are comments that I\u0026amp;rsquo;ve added to explain a point. When I show updates to a file, the \u0026amp;ldquo;:wq\u0026amp;rdquo; on the last line means to save the file.\nHere\u0026amp;rsquo;s an example:\n## this is a comment $ echo this is a command this is a command ## edit the file $ vi foo.md +++ date = \u0026amp;quot;2014-09-28\u0026amp;quot; title = \u0026amp;quot;creating a new theme\u0026amp;quot; +++ bah and humbug :wq ## show it $ cat foo.md +++ date = \u0026amp;quot;2014-09-28\u0026amp;quot; title = \u0026amp;quot;creating a new theme\u0026amp;quot; +++ bah and humbug $ Some Definitions There are a few concepts that you need to understand before creating a theme.\nSkins Skins are the files responsible for the look and feel of your site. It’s the CSS that controls colors and fonts, it’s the Javascript that determines actions and reactions. It’s also the rules that Hugo uses to transform your content into the HTML that the site will serve to visitors.\nYou have two ways to create a skin. The simplest way is to create it in the layouts/ directory. If you do, then you don’t have to worry about configuring Hugo to recognize it. The first place that Hugo will look for rules and files is in the layouts/ directory so it will always find the skin.\nYour second choice is to create it in a sub-directory of the themes/ directory. If you do, then you must always tell …","date":1411862400,"description":"","lastmod":"2014-09-28T00:00:00Z","objectID":"10eeb9ea9124522a9d97519db11b1159","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/post/develop-overview-test/","publishdate":"2014-09-28T00:00:00Z","title":"Creating a New Theme"},{"categories":["Development","golang"],"content":"Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.\nThis document is a brief primer on using Go templates. The Go docs provide more details.\nIntroduction to Go Templates Go templates provide an extremely simple template language. It adheres to the belief that only the most basic of logic belongs in the template or view layer. One consequence of this simplicity is that Go templates parse very quickly.\nA unique characteristic of Go templates is they are content aware. Variables and content will be sanitized depending on the context of where they are used. More details can be found in the Go docs.\nBasic Syntax Golang templates are HTML files with the addition of variables and functions.\nGo variables and functions are accessible within {{ }}\nAccessing a predefined variable \u0026amp;ldquo;foo\u0026amp;rdquo;:\n{{ foo }}  Parameters are separated using spaces\nCalling the add function with input of 1, 2:\n{{ add 1 2 }}  Methods and fields are accessed via dot notation\nAccessing the Page Parameter \u0026amp;ldquo;bar\u0026amp;rdquo;\n{{ .Params.bar }}  Parentheses can be used to group items together\n{{ if or (isset .Params \u0026amp;quot;alt\u0026amp;quot;) (isset .Params \u0026amp;quot;caption\u0026amp;quot;) }} Caption {{ end }}  Variables Each Go template has a struct (object) made available to it. In hugo each template is passed either a page or a node struct depending on which type of page you are rendering. More details are available on the variables page.\nA variable is accessed by referencing the variable name.\n\u0026amp;lt;title\u0026amp;gt;{{ .Title }}\u0026amp;lt;/title\u0026amp;gt;  Variables can also be defined and referenced.\n{{ $address := \u0026amp;quot;123 Main St.\u0026amp;quot;}} {{ $address }}  Functions Go template ship with a few functions which …","date":1396396800,"description":"","lastmod":"2014-04-02T00:00:00Z","objectID":"4f1f56186d2fece779068cd43c2d5eb2","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/post/goisforlovers/","publishdate":"2014-04-02T00:00:00Z","tags":["go","golang","templates","themes","development"],"title":"About Flutter Master"},{"content":"aaaaaa\nvvvv\naaa\n","date":1508248845,"description":"","lastmod":"2017-10-17T14:00:45Z","objectID":"f2fa6ea0717050da498e1521b211ff9b","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/posts/hello_world/","publishdate":"2017-10-17T14:00:45Z","title":"Hello_world"},{"content":"Installation Download Hugo theme, configure, preview site \u0026amp;hellip;\nConfiguration You may specify options in config.toml (or config.yaml/config.json) of your site to make use of this theme\u0026amp;rsquo;s features.\nScreenshot ","date":1508253975,"description":"Text about this post","lastmod":"2018-12-08T15:26:15Z","objectID":"071cf8d3736c26e0e7db1173aadc7b07","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/start-development-flutter-master/","publishdate":"2018-11-23T15:26:15Z","title":"Flutter Master"},{"content":"You may specify options in config.toml (or config.yaml/config.json) of your site to make use of this theme’s features.\nFor an example of config.toml, see config.toml in exampleSite.\nParams # Source Code repository section description = \u0026amp;quot;put your description\u0026amp;quot; github_repository = \u0026amp;quot;https://github.com/thingsym/hugo-theme-techdoc\u0026amp;quot; version = \u0026amp;quot;0.9.6\u0026amp;quot; # Documentation repository section # documentation repository (set edit link to documentation repository) github_doc_repository = \u0026amp;quot;https://github.com/thingsym/hugo-theme-techdoc\u0026amp;quot; # Analytic section google_analytics_id = \u0026amp;quot;\u0026amp;quot; # Your Google Analytics tracking id tag_manager_container_id = \u0026amp;quot;\u0026amp;quot; # Your Google Tag Manager container id google_site_verification = \u0026amp;quot;\u0026amp;quot; # Your Google Site Verification for Search Console # Open Graph and Twitter Cards settings section # Open Graph settings for each page are set on the front matter. # See https://gohugo.io/templates/internal/#open-graph # See https://gohugo.io/templates/internal/#twitter-cards title = \u0026amp;quot;Hugo Techdoc Theme\u0026amp;quot; images = [\u0026amp;quot;images/og-image.png\u0026amp;quot;] # Open graph images are placed in `static/images` # Theme settings section # Theme color # See color value reference https://developer.mozilla.org/en-US/docs/Web/CSS/color custom_font_color = \u0026amp;quot;\u0026amp;quot; custom_background_color = \u0026amp;quot;\u0026amp;quot; # Documentation Menu section # Menu style settings menu_style = \u0026amp;quot;open-menu\u0026amp;quot; # \u0026amp;quot;open-menu\u0026amp;quot; or \u0026amp;quot;slide-menu\u0026amp;quot; or \u0026amp;quot;\u0026amp;quot; blank is as no sidebar # Date format dateformat = \u0026amp;quot;\u0026amp;quot; # default \u0026amp;quot;2 Jan 2006\u0026amp;quot; # See the format reference https://gohugo.io/functions/format/#hugo-date-and-time-templating-reference # path name excluded from documentation menu menu_exclusion = [ \u0026amp;quot;archives\u0026amp;quot;, \u0026amp;quot;archive\u0026amp;quot;, \u0026amp;quot;blog\u0026amp;quot;, \u0026amp;quot;entry\u0026amp;quot;, \u0026amp;quot;post\u0026amp;quot;, \u0026amp;quot;posts\u0026amp;quot;, ] # Algolia site search section # See https://www.algolia.com/doc/ algolia_search_enable = …","date":1508253975,"description":"","lastmod":"2019-10-26T15:26:15Z","objectID":"4149c71da6c5d0ddeef0a83f521a5186","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/start-development-flutter-master/configuration/","publishdate":"2017-10-17T15:26:15Z","title":"Configuration"},{"content":"Install Hugo theme on your project If you have git installed, you can include hugo-theme-techdoc repository into your core repository as submodule using git submodule within your project directory.\ncd your_project git submodule add https://github.com/thingsym/hugo-theme-techdoc.git themes/hugo-theme-techdoc For more information read the Hugo documentation.\nOr download Hugo theme on your project If you have git installed, you can do the following at the command-line-interface within your project directory.\ncd your_project/themes git clone https://github.com/thingsym/hugo-theme-techdoc.git Configure You may specify options in config.toml (or config.yaml/config.json) of your site to make use of this theme\u0026amp;rsquo;s features.\nFor an example of config.toml, see config.toml in exampleSite.\nSee the Configuration documentation.\nPreview site To preview your site, run Hugo\u0026amp;rsquo;s built-in local server.\nhugo server -t hugo-theme-techdoc Browse site on http://localhost:1313\n","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"dc24cbe5010d15ed1f45a5a71972b055","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/start-development-flutter-master/installation/","publishdate":"2017-10-17T15:26:15Z","title":"Installation"},{"content":"Theme color Menu style Open Menu Slide Menu Edit link ","date":1572103575,"description":"","lastmod":"2019-10-26T15:26:15Z","objectID":"362baa1de292710624bb67b3fdfb7895","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/start-development-flutter-master/screenshot/","publishdate":"2019-10-26T15:26:15Z","title":"Screenshot"},{"content":"Flutter Master Download Hugo theme, configure, preview site \u0026amp;hellip;\nDocs Site You may specify options in config.toml (or config.yaml/config.json) of your site to make use of this theme\u0026amp;rsquo;s features.\nScreenshot ","date":1508253975,"description":"Text about this post","lastmod":"2018-12-08T15:26:15Z","objectID":"ca276eeed1a299f2cd04981070dccadc","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/start-development/","publishdate":"2018-11-23T15:26:15Z","title":"Start Development"},{"categories":["Development","golang"],"content":"Getting Starting 1. Hugo Install Install the HugoCLI.(https://gohugo.io/getting-started/installing/)\n# Use Mac Case brew install hugo # Use Windows Case(PowerShell) choco install hugo -confirm 2. Git Clone Clone the Docs source code.\ngit clone https://github.com/MacrotechJP-OSS/flutter-master-docs.git 3. Hugo Start-up Start hugo server.\nhugo server Creating 4. Hugo PublicDir Create After creating the content, create HTML for publication.\nHTML is created under docs.\nhugo Deploying 5. Git Commit \u0026amp;amp; Push Push the created content to github.\ngit add * git commit -m \u0026amp;#34;\u0026amp;lt;Commit Message\u0026amp;gt;\u0026amp;#34; git push origin master After the push is complete, the contents of Github pages will be updated automatically.\nOther Information Docs Configration ├── archetypes .. hugo new コマンドでコンテンツファイルを作ったときの Markdown のフォーマット │ └── default.md .. デフォルトで設定したい書式を記載 ├── content .. メインコンテンツとなるMarkdownファイルを置くディレクトリ ├── data .. サイトの全ページから参照したいデータを記述したファイルを置くディレクトリ ├── docs .. 本番公開用のHTMLが作成されるディレクトリ ├── layouts .. themes においたテーマファイルの一部修正やレイアウトパーツを追加するディレクトリ ├── static .. 静的ファイル（スタイルシート、JavaScript や画像ファイルなど）を配置するディレクトリ ├── themes .. 利用するhugoテーマファイルを配置するディレクトリ ├── config.toml .. Hugoの設定ファイル ├── LICENSE .. MIT License └── README.md .. リポジトリの概要情報を記載 ","date":1613433600,"description":"","lastmod":"2021-02-16T00:00:00Z","objectID":"6836f776c31629a767f32abeec79ff88","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/start-development/docs-site/","publishdate":"2021-02-16T00:00:00Z","tags":["go","golang","hugo","development"],"title":"Docs Site"},{"categories":["Development","golang"],"content":"Using Docker + VSCode Using VSCode（Online） Using VSCode（Local） その他情報 ディレクトリ構成 libフォルダ配下\n├── constant/ .. 値に変更がない固定値を定義 ├── extension/ .. String等の既存のライブラリへの機能追加を記述 ├── model/ .. データの保持 ├── plugin/ .. ネイティブ実装内容を記述 ├── resource/ .. 色や文字のスタイルなどを定義 ├── service/ .. API通信の処理を記述 ├── view/ .. uiのwidgetを記述 ├── view_model/ .. serviceとviewの中間で、データの変更を管理 └── main.dart .. 実行時呼び出されるメインファイル ","date":1613433600,"description":"","lastmod":"2021-02-16T00:00:00Z","objectID":"0b6a5eae99a78aa880896e50d2e41240","permalink":"https://macrotechjp-oss.github.io/flutter-master-docs/start-development/flutter-master/","publishdate":"2021-02-16T00:00:00Z","tags":["go","golang","hugo","development"],"title":"Flutter Master"}]